# 1018_체스판 다시 칠하기
### 크기가 고정된 체스판
- 보드판은 8*8로 고정(0,0)~(7,7)  
- N*M 입력값이 들어왔을 때 보드판의 (0,0) 좌표가 될 수 있는 max(행,열)->(N-7,M-7)  
- 가능한 (행,열)좌표: (0,0)~((N-7,M-7))
### 최소 덧칠 수  
- 좌측 상단이 W,B일 경우 나눠서 집계
## 오답

# N X M 보드 입력받음
n, m = map(int,input().split(" "))

arr = []
for _ in range(n):
    arr.append(list(map(str, input())))

# 덧칠 갯수 기록 리스트 정의
cnt=[]

# 최소 덧칠 갯수 기록변수
best_update = -1
# (0,0)~(n-7,m-7) 원본 보드 좌표 검사
for N in range(n-7):
    for M in range(m-7):
      repaint = 0

      # W로 시작하는 체스판
      if arr[N][M] == "W":


        #print("W로 시작함")

        # 8 X 8 보드 검사
        for row in range(N, N+8, +1):
          for col in range(M, M+8, +1):

              # 짝수 칸인 경우
              if (row+col)%2==0:
                    # W로 칠해야함
                    if arr[row][col]!='W':
                      repaint+=1
                    else:
                      continue
              #홀수 칸인 경우
              else:
                    # B로 칠해야함
                    if arr[row][col]=='W':

                      repaint+=1

                    else:
                      continue

          # 덧칠 갯수 기록 갱신
          cnt.append(repaint)

      # B로 시작하는 체스판
      else:

        #print("B로 시작함")

        # 8 X 8 보드 검사
        for row in range(N, N+8, +1):
          for col in range(M, M+8, +1):
              # 짝수 칸인 경우
              if (row+col)%2==0:
                    # B로 칠해야함
                    if arr[row][col]!='B':
                      repaint+=1
                    else:
                      continue
              #홀수 칸인 경우
              else:
                    # W로 칠해야함
                    if arr[row][col]=='B':
                      repaint+=1
                    else:
                      continue
          # 덧칠 갯수 기록 갱신
          cnt.append(repaint)



      #print(cnt)


print(min(cnt))

## 정답
- B/W로 시작하는 경우를 나눌 필요 없이 각각의 경우에서 repaint 횟수를 다른 변수로 정의
# N X M 보드 입력받음
n, m = map(int,input().split(" "))


arr = []
for _ in range(n):
    arr.append(list(map(str, input())))


# 최소 덧칠 갯수 기록변수
best_update = -1

# (0,0)~(n-7,m-7) 원본 보드 좌표 검사
for N in range(n-7):
    for M in range(m-7):

        white_first = 0
        black_first = 0
        example_update = 0

        # 임의의 8 X 8 보드 검사
        for row in range(N, N+8, +1):
            for col in range(M, M+8, +1):

                # 흰 & 검 시작 2가지 상태, 검사
                if((row + 1) % 2 != 0):
                    if((col + 1) % 2 != 0):
                        if(arr[row][col] != "W"):
                            white_first += 1
                        else:
                            black_first += 1
                    else:
                        if(arr[row][col] != "B"):
                            white_first += 1
                        else:
                            black_first += 1
                else:
                    if((col + 1) % 2 != 0):
                        if(arr[row][col] != "B"):
                            white_first += 1
                        else:
                            black_first += 1
                    else:
                        if(arr[row][col] != "W"):
                            white_first += 1
                        else:
                            black_first += 1

        # 임의의 보드 검사 완료
        if (white_first > black_first):
            example_update = black_first
        else:
            example_update = white_first

        # 임의의 보드 최소갯수와 기록된 최소 갯수 비교
        if (best_update == -1 or best_update > example_update):
            best_update = example_update

        # print(best_update, end =", ")

print(best_update)

